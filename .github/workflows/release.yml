name: Build and Release

on:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Update package.json version from tag
      if: github.ref_type == 'tag'
      run: |
        $content = Get-Content package.json -Raw
        $content = $content -replace '"version": ".*"', '"version": "${{ github.ref_name }}"'
        Set-Content package.json $content
      shell: powershell

    - name: Build Windows x64
      run: npm run build:win-x64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-this-win-x64
        path: dist/ffmpeg-this-win-x64.exe


  build-macos-x64:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Update package.json version from tag
      if: github.ref_type == 'tag'
      run: |
        sed -i '' 's/"version": ".*"/"version": "'"${{ github.ref_name }}"'"/' package.json

    - name: Build macOS x64
      run: npm run build:mac-x64

    - name: Make binary executable
      run: chmod +x dist/ffmpeg-this-macos-x64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-this-macos-x64
        path: dist/ffmpeg-this-macos-x64

  build-macos-arm64:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Update package.json version from tag
      if: github.ref_type == 'tag'
      run: |
        sed -i '' 's/"version": ".*"/"version": "'"${{ github.ref_name }}"'"/' package.json

    - name: Build macOS ARM64
      run: npm run build:mac-arm64

    - name: Make binary executable
      run: chmod +x dist/ffmpeg-this-macos-arm64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-this-macos-arm64
        path: dist/ffmpeg-this-macos-arm64

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Update package.json version from tag
      if: github.ref_type == 'tag'
      run: |
        sed -i 's/"version": ".*"/"version": "'"${{ github.ref_name }}"'"/' package.json

    - name: Build Linux x64
      run: npm run build:linux-x64

    - name: Make binary executable
      run: chmod +x dist/ffmpeg-this-linux-x64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-this-linux-x64
        path: dist/ffmpeg-this-linux-x64

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci --include=dev

    - name: Update package.json version from tag
      if: github.ref_type == 'tag'
      run: |
        sed -i 's/"version": ".*"/"version": "'"${{ github.ref_name }}"'"/' package.json

    - name: Build Linux ARM64
      run: npm run build:linux-arm64

    - name: Make binary executable
      run: chmod +x dist/ffmpeg-this-linux-arm64

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-this-linux-arm64
        path: dist/ffmpeg-this-linux-arm64

  release:
    needs: [build-windows-x64, build-macos-x64, build-macos-arm64, build-linux-x64, build-linux-arm64]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    # Delete previous release (tag or main)
    - name: Delete existing release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG=""
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          RELEASE_TAG="${{ github.ref_name }}"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          RELEASE_TAG="main"
        fi
        if [[ -n "$RELEASE_TAG" ]]; then
          echo "Deleting release $RELEASE_TAG"
          gh release delete $RELEASE_TAG -y || true
        else
          echo "Not a tag or main branch push, skipping release deletion."
        fi

    - name: Create Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG=""
        RELEASE_NAME=""
        BODY=""
        PRERELEASE=""
        LATEST=""
        
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          RELEASE_TAG="${{ github.ref_name }}"
          RELEASE_NAME="${{ github.ref_name }}"
          PRERELEASE=""
          LATEST="--latest"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          RELEASE_TAG="main"
          RELEASE_NAME="main"
          BODY="${{ github.event.head_commit.message }}"
          PRERELEASE="--prerelease"
          LATEST=""
        fi
        
        gh release create $RELEASE_TAG \
          --title "$RELEASE_NAME" \
          --notes "$BODY" \
          $PRERELEASE \
          $LATEST

    - name: Upload Release Assets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG=""
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          RELEASE_TAG="${{ github.ref_name }}"
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          RELEASE_TAG="main"
        fi
        
        gh release upload $RELEASE_TAG \
          ./ffmpeg-this-win-x64/ffmpeg-this-win-x64.exe \
          ./ffmpeg-this-macos-x64/ffmpeg-this-macos-x64 \
          ./ffmpeg-this-macos-arm64/ffmpeg-this-macos-arm64 \
          ./ffmpeg-this-linux-x64/ffmpeg-this-linux-x64 \
          ./ffmpeg-this-linux-arm64/ffmpeg-this-linux-arm64